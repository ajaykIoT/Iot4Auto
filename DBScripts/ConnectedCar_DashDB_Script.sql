
CREATE TABLE ERROR_CODES (
  ERROR_CODE INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  ERROR_DESC VARCHAR(55) NOT NULL
)
ORGANIZE BY ROW;



CREATE TABLE  ERRORS (
  ID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  MO_ID VARCHAR(1000) NOT NULL,
  CREATED_ON TIMESTAMP NOT NULL,
  ERROR_CODE INTEGER NOT NULL
)
ORGANIZE BY ROW;



CREATE INDEX IDX_ERRORS__ERROR__CODES ON ERRORS (ERROR_CODE);



ALTER TABLE ERRORS ADD CONSTRAINT FK_ERRORS__ERROR__CODES FOREIGN KEY (ERROR_CODE) REFERENCES ERROR_CODES (ERROR_CODE) NOT ENFORCED;



CREATE TABLE JOBS 
(
  ID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  JOB_ID VARCHAR(255) NOT NULL,
  TENANT_ID VARCHAR(1000) NOT NULL,
  JOB_SUBMIT_TIME TIMESTAMP NOT NULL,
  FROM_DATE TIMESTAMP NOT NULL,
  TO_DATE TIMESTAMP NOT NULL,
  JOB_STATUS VARCHAR(1000) NOT NULL
)

ORGANIZE BY ROW;



CREATE TABLE NOTIFICATIONS (
  ID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  NOTIFICATIONID INTEGER NOT NULL,
  NOTIFICATIONMSG VARCHAR(1000) NOT NULL
)
ORGANIZE BY ROW;


CREATE TABLE  ROLES (
  ROLEID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  ROLE VARCHAR(1000) NOT NULL,
  CREATED_ON TIMESTAMP
)
ORGANIZE BY ROW;



CREATE TABLE USERTYPES (
  USERTYPEID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  USERTYPE VARCHAR(1000) NOT NULL,
  CREATED_ON TIMESTAMP
)

ORGANIZE BY ROW;


CREATE TABLE USERS
(
  USERID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  USERNAME VARCHAR(1000) NOT NULL,
  PASSWORD VARCHAR(1000),
  FIRST_NAME VARCHAR(1000) NOT NULL,
  LAST_NAME VARCHAR(1000),
  MOBILE_NO VARCHAR(1000),
  EMAIL VARCHAR(1000),
  AGE INTEGER,
  GENDER VARCHAR(1000) NOT NULL,
  STATUS INT,
  ROLEID INTEGER NOT NULL,
  USERTYPEID INTEGER NOT NULL,
  COUNTRY VARCHAR(1000),
  PROFILE_PIC VARCHAR(1000)
)

ORGANIZE BY ROW;


ALTER TABLE USERS ADD CONSTRAINT FK_USERS__ROLES FOREIGN KEY (ROLEID) REFERENCES ROLES (ROLEID) NOT ENFORCED;



ALTER TABLE USERS ADD CONSTRAINT FK_USERS__USER_TYPES FOREIGN KEY (USERTYPEID) REFERENCES USERTYPES (USERTYPEID) NOT ENFORCED;




CREATE TABLE  MOBILE_DEVICE_REGISTRATION (
  ID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  DEVICEUUID VARCHAR(1000) NOT NULL,
  DEVICEREGID VARCHAR(1000) NOT NULL,
  DEVICEPLATFORM VARCHAR(1000) NOT NULL,
  USERID INTEGER NOT NULL,
  USERAGENT VARCHAR(1000)
 )
ORGANIZE BY ROW;


CREATE INDEX IDX_MOBILE_DEVICE_REGISTRATION ON MOBILE_DEVICE_REGISTRATION (USERID);

ALTER TABLE MOBILE_DEVICE_REGISTRATION ADD CONSTRAINT FK_MOBILE_DEVICE_REGISTRATION_ FOREIGN KEY (USERID) REFERENCES USERS (USERID) NOT ENFORCED;



CREATE TABLE  USERLOGINS (
  ID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  USERID INTEGER NOT NULL,
  LOGINTYPE VARCHAR(1000) NOT NULL,
  STATUS INTEGER,
  LAST_LOGIN_ON DATE,
  CREATED_ON VARCHAR(1000) NOT NULL 
)
ORGANIZE BY ROW;


CREATE INDEX IDX_USERLOGINS__USERS ON USERLOGINS (USERID);


ALTER TABLE USERLOGINS ADD CONSTRAINT FK_USERLOGINS__USERS FOREIGN KEY (USERID) REFERENCES USERS (USERID) NOT ENFORCED;




CREATE TABLE USER_ALERTS (
  ID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  USERID INTEGER NOT NULL,
  NOTIFICATIONID INTEGER NOT NULL
 )

ORGANIZE BY ROW;


CREATE INDEX IDX_USER_ALERTS__NOTIFICATIONS ON USER_ALERTS (NOTIFICATIONID);


CREATE INDEX IDX_USER_ALERTS__USERS ON USER_ALERTS (USERID);


ALTER TABLE USER_ALERTS ADD CONSTRAINT FK_USER_ALERTS__NOTIFICATIONS FOREIGN KEY (NOTIFICATIONID) REFERENCES NOTIFICATIONS (ID) NOT ENFORCED;


ALTER TABLE USER_ALERTS ADD CONSTRAINT FK_USER_ALERTS__USERS FOREIGN KEY (USERID) REFERENCES USERS (USERID) NOT ENFORCED;




CREATE TABLE  USER_TIPS (
  TIPSID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  TIPSMSG VARCHAR(1000) NOT NULL,
  TYPE VARCHAR(1000),
  USERID INTEGER
  )
ORGANIZE BY ROW;



CREATE INDEX IDX_USER_TIPS__USERS ON USER_TIPS (USERID);



ALTER TABLE USER_TIPS ADD CONSTRAINT FK_USER_TIPS__USERS FOREIGN KEY (USERID) REFERENCES USERS (USERID) NOT ENFORCED;



CREATE TABLE  WIFI_SETTINGS (
  SETTINGSID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  STATUS INTEGER,
  IP_ADDRESS VARCHAR(1000),
  LINK_SPEED VARCHAR(1000),
  SIGNAL_STRENGTH VARCHAR(1000),
  WIFI_NAME VARCHAR(1000) NOT NULL,
  SECURITY_TYPE VARCHAR(1000),
  PASSWORD VARCHAR(1000),
  MO_ID INTEGER,
  CREATED_ON TIMESTAMP
)

ORGANIZE BY ROW;


CREATE TABLE CARS
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
	MO_ID VARCHAR(1000) NOT NULL,
	MO_TYPE VARCHAR(1000) NOT NULL,
	MO_TOKEN VARCHAR(1000) NOT NULL,
	ORG_ID VARCHAR(1000) NOT NULL,
	CAR_NAME VARCHAR(1000),
	CAR_STATUS INTEGER NOT NULL WITH DEFAULT,
	FUEL VARCHAR(1000),
	BATTERY_VOLTAGE VARCHAR(1000),
	TEMPRATURE INTEGER,
	DISTANCE_TRAVELLED INTEGER,
	USERNAME VARCHAR(100),
	CURRENT_LONGITUDE VARCHAR(1000),
	CURRENT_LATITUDE VARCHAR(1000),
	CREATED_ON TIMESTAMP,
	UPDATED_ON TIMESTAMP,
	SETTINGSID INTEGER
)
ORGANIZE BY ROW;

ALTER TABLE DASH110425.CARS
ADD CONSTRAINT SQL170323090446470
PRIMARY KEY (ID);

ALTER TABLE DASH110425.CARS
	ADD CONSTRAINT FK_CARS__USERS
		FOREIGN KEY (USERID) REFERENCES DASH110425.USERS(USERID)
 ON UPDATE NO ACTION
 ON DELETE NO ACTION
 NOT ENFORCED;

ALTER TABLE DASH110425.CARS
	ADD CONSTRAINT FK_CARS__WIFI__SETTINGS
		FOREIGN KEY (SETTINGSID) REFERENCES DASH110425.WIFI_SETTINGS(SETTINGSID)
 ON UPDATE NO ACTION
 ON DELETE NO ACTION
 NOT ENFORCED;



CREATE TABLE DASH110425.TRIPS
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
	TRIP_ID BIGINT NOT NULL,
	TRIP_UUID VARCHAR(1000) NOT NULL,
	TENANT_ID VARCHAR(1000) NOT NULL,
	GENERATED_TIME TIMESTAMP NOT NULL,
	START_TIME TIMESTAMP NOT NULL,
	END_TIME TIMESTAMP NOT NULL,
	MO_ID VARCHAR(1000),
	CARID INTEGER NOT NULL,
	DRIVER_ID INTEGER,
	JOB_ID VARCHAR(1000) NOT NULL,
	JOBS_IDENTITY_FK INTEGER NOT NULL,
	DRIVING_SCORE INTEGER
)
ORGANIZE BY ROW;

ALTER TABLE DASH110425.TRIPS
ADD CONSTRAINT SQL170324114351860
PRIMARY KEY (ID);

ALTER TABLE DASH110425.TRIPS
ADD CONSTRAINT UQ_KEY_TRIPS
UNIQUE (TRIP_ID);

ALTER TABLE DASH110425.TRIPS
	ADD CONSTRAINT FK_TRIPS__CARS
		FOREIGN KEY (CARID) REFERENCES DASH110425.CARS(ID)
 ON UPDATE NO ACTION
 ON DELETE NO ACTION
 NOT ENFORCED;

ALTER TABLE DASH110425.TRIPS
	ADD CONSTRAINT FK_TRIPS__JOBS
		FOREIGN KEY (JOBS_IDENTITY_FK) REFERENCES DASH110425.JOBS(ID)
 ON UPDATE NO ACTION
 ON DELETE NO ACTION
 NOT ENFORCED;

ALTER TABLE DASH110425.TRIPS
	ADD CONSTRAINT FK_TRIPS__USERS
		FOREIGN KEY (DRIVER_ID) REFERENCES DASH110425.USERS(USERID)
 ON UPDATE NO ACTION
 ON DELETE NO ACTION
 NOT ENFORCED;

CREATE INDEX DASH110425.IDX_TRIPS__CARS
ON DASH110425.TRIPS
(
	CARID
);

CREATE INDEX DASH110425.IDX_TRIPS__JOBS
ON DASH110425.TRIPS
(
	JOB_ID
);

CREATE INDEX DASH110425.IDX_TRIPS__USERS
ON DASH110425.TRIPS
(
	DRIVER_ID
);



CREATE TABLE  TRIP_DETAILS (
  ID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  TRIP_UUID VARCHAR(1000) NOT NULL,
  TENANT_ID VARCHAR(1000) NOT NULL,
  END_ALTITUDE DECIMAL(20, 10) NOT NULL,
  END_LATITUDE DECIMAL(20, 10) NOT NULL,
  END_LONGITUDE DECIMAL(20, 10) NOT NULL,
  END_TIME TIMESTAMP NOT NULL,
  GENERATED_TIME TIMESTAMP NOT NULL,
  MO_ID VARCHAR(1000) NOT NULL,
  DRIVER_ID INTEGER,
  START_ALTITUDE DECIMAL(20, 10),
  START_LATITUDE DECIMAL(20, 10) NOT NULL,
  START_LONGITUDE DECIMAL(20, 10) NOT NULL,
  START_TIME TIMESTAMP NOT NULL,
  TRIP_ID INTEGER NOT NULL
  
)

ORGANIZE BY ROW;



CREATE INDEX IDX_TRIP_DETAILS__TRIPS ON TRIP_DETAILS (TRIP_ID);





CREATE TABLE DASH110425.CTX_SUB_TRIPS
(
                ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
                TRIP_ID INTEGER NOT NULL,
                SUB_TRIP_ID VARCHAR(1000) NOT NULL,
                TENANT_ID VARCHAR(1000) NOT NULL,
                AVG_SPEED DECIMAL(12, 10) NOT NULL,
                END_LATITUDE DECIMAL(12, 10) NOT NULL,
                END_LONGITUDE DECIMAL(12, 10) NOT NULL,
                END_TIME TIMESTAMP NOT NULL,
                MO_ID VARCHAR(1000) NOT NULL,
                DRIVER_ID INTEGER NOT NULL,
                START_LATITUDE DECIMAL(12, 10) NOT NULL,
                START_LONGITUDE DECIMAL(12, 10) NOT NULL,
                START_TIME TIMESTAMP NOT NULL,
                TRIP_UUID VARCHAR(1000) NOT NULL,
                TRIP_DETAIL_ID INTEGER NOT NULL,
                PRIMARY KEY (ID)
)
ORGANIZE BY ROW;




CREATE INDEX IDX_CTX_SUB_TRIPS__TRIP__DETAI ON CTX_SUB_TRIPS (TRIP_DETAIL_ID);



ALTER TABLE CTX_SUB_TRIPS ADD CONSTRAINT FK_CTX_SUB_TRIPS__TRIP__DETAIL FOREIGN KEY (TRIP_DETAIL_ID) REFERENCES TRIP_DETAILS (ID) NOT ENFORCED;



CREATE TABLE  CTX_FEATURES (
  ID INTEGER PRIMARY KEY  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1),
  CONTEXT_CATEGORY VARCHAR(1000) NOT NULL,
  CONTEXT_CATEGORY_ID INTEGER NOT NULL,
  CONTEXT_ID INTEGER NOT NULL,
  CONTEXT_NAME VARCHAR(1000) NOT NULL,
  SUB_TRIP_ID VARCHAR(1000) NOT NULL,
  TENANT_ID VARCHAR(1000) NOT NULL,
  CTX_SUB_TRIPS_ID INTEGER NOT NULL,
  CTX_SUB_TRIPS_AVG_SPEED INTEGER NOT NULL
)

ORGANIZE BY ROW;



CREATE INDEX IDX_CTX_FEATURES__CTX__SUB__TR ON CTX_FEATURES (CTX_SUB_TRIPS_ID, CTX_SUB_TRIPS_AVG_SPEED);



ALTER TABLE CTX_FEATURES ADD CONSTRAINT FK_CTX_FEATURES__CTX__SUB__TRI FOREIGN KEY (CTX_SUB_TRIPS_ID) REFERENCES CTX_SUB_TRIPS (ID) NOT ENFORCED;



CREATE TABLE DASH110425.DRIVING_BEHAVIOR_DETAILS
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
	BEHAVIOR_NAME VARCHAR(1000) NOT NULL,
	END_LATITUDE DECIMAL(12, 2) NOT NULL,
	END_TIME TIMESTAMP NOT NULL,
	GENERATED_TIME TIMESTAMP NOT NULL,
	MO_ID VARCHAR(1000) NOT NULL,
	DRIVER_ID INTEGER,
	START_LATITUDE DECIMAL(12, 2) NOT NULL,
	START_LONGITUDE DECIMAL(12, 2) NOT NULL,
	START_TIME TIMESTAMP NOT NULL,
	SUB_TRIP_ID VARCHAR(1000) NOT NULL,
	TENANT_ID VARCHAR(1000) NOT NULL,
	TRIP_ID VARCHAR(1000) NOT NULL,
	BEHAVIOR_ID INTEGER NOT NULL,
	CTX_SUB_TRIPS_ID INTEGER NOT NULL,
	CTX_SUB_TRIPS_AVG_SPEED INTEGER NOT NULL
)
ORGANIZE BY ROW;

ALTER TABLE DASH110425.DRIVING_BEHAVIOR_DETAILS
ADD CONSTRAINT SQL170324114015580
PRIMARY KEY (ID);

CREATE INDEX DASH110425.IDX_DRIVING_BEHAVIOR_DETAILS
ON DASH110425.DRIVING_BEHAVIOR_DETAILS
(
	CTX_SUB_TRIPS_ID,
	CTX_SUB_TRIPS_AVG_SPEED
);


CREATE TABLE TRIP_ROUTES
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
	TIMESTAMP TIMESTAMP NOT NULL,
	LONGITUDE DECIMAL(12, 10) NOT NULL,
	LATITUDE DECIMAL(12, 10) NOT NULL,
	HEADING DECIMAL(12, 10) NOT NULL,
	MATCHED_LONGITUDE DECIMAL(12, 10) NOT NULL,
	MATCHED_LATITUDE DECIMAL(12, 10) NOT NULL,
	MATCHED_HEADING DECIMAL(12, 10) NOT NULL,
	SPEED DECIMAL(12, 10) NOT NULL,
	MATCHED_LINK_ID VARCHAR(1000) NOT NULL,
	MO_ID VARCHAR(1000) NOT NULL,
	DRIVER_ID VARCHAR(100),
	ROAD_TYPE INTEGER,
	TRIP_ID BIGINT NOT NULL, 
	TRIP_STATUS INTEGER NOT NULL DEFAULT 0
)
ORGANIZE BY ROW;



CREATE INDEX IDX_TRIP_ROUTES__TRIPS ON TRIP_ROUTES (TRIP_ID);



ALTER TABLE TRIP_ROUTES ADD CONSTRAINT FK_TRIP_ROUTES__TRIPS FOREIGN KEY (TRIP_ID) REFERENCES TRIPS (TRIP_ID) NOT ENFORCED;



CREATE TABLE TRIP_FEATURES (
  ID INTEGER PRIMARY KEY  NOT NULL,
  FEATURE_NAME VARCHAR(1000) NOT NULL,
  FEATURE_VALUE DECIMAL(12, 10) NOT NULL,
  TENANT_ID VARCHAR(1000) NOT NULL,
  TRIP_UUID VARCHAR(1000) NOT NULL,
  TRIP_ID INTEGER NOT NULL 
  
)
ORGANIZE BY ROW;


CREATE INDEX IDX_TRIP_FEATURES ON TRIP_FEATURES (ID);
ALTER TABLE TRIP_FEATURES ADD CONSTRAINT FK_TRIP_FEATURES__TRIPS FOREIGN KEY (TRIP_ID) REFERENCES TRIPS (ID) NOT ENFORCED;


CREATE TABLE DASH110425.BEHAVIOR_SCORE
(
	ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
	BEHAVIOR_NAME VARCHAR(1000) NOT NULL,
	TOTAL_TIME INTEGER,
	BEHAVIOR_COUNT INTEGER,
	BEHAVIOR_SCORE DECIMAL(20, 10),
	TRIP_ID INTEGER NOT NULL,
	USERNAME VARCHAR(50),
	QUERY_DATE TIMESTAMP
)
ORGANIZE BY ROW;

ALTER TABLE DASH110425.BEHAVIOR_SCORE
ADD CONSTRAINT SQL170412121107320
PRIMARY KEY (ID);

ALTER TABLE DASH110425.BEHAVIOR_SCORE
	ADD CONSTRAINT FK_BEHAVIOR_SCORE__TRIPS
		FOREIGN KEY (TRIP_ID) REFERENCES DASH110425.TRIPS(ID)
 ON UPDATE NO ACTION
 ON DELETE NO ACTION
 NOT ENFORCED;

CREATE INDEX DASH110425.BEHAVIOR_SCORE
ON DASH110425.BEHAVIOR_SCORE
(
	TRIP_ID
);





/*INSERT SCRIPTS*/

INSERT INTO DASH110425.JOBS (JOB_ID
       , TENANT_ID
       , JOB_SUBMIT_TIME
       , FROM_DATE
       , TO_DATE
       , JOB_STATUS
) 
VALUES (
'4b1d1f18-7a0f-4453-94de-8d7f9a03226d',
'a3e0a8c5-df54-4806-ba97-375b9b499ea7',
'2017-03-24',
'2016-03-20',
'2016-03-21',
'SUCCEEDED');


INSERT INTO DASH110425.TRIPS (TRIP_ID
       , TRIP_UUID
       , TENANT_ID
       , GENERATED_TIME
       , START_TIME
       , END_TIME
       , CARID
       , DRIVER_ID
       , JOB_ID
       , JOBS_IDENTITY_FK
	   , MO_ID
) VALUES (
1457671276,
'67b462f8-5ef9-4ac0-b727-4f7daa219b45',
'a3e0a8c5-df54-4806-ba97-375b9b499ea7',
'2017-03-24-10.11.00.000000',
'2017-03-15-13.43.00.000000',
'2017-03-15-13.45.00.000000',
1,
1,
'de0dc5ab-67a3-4c82-8753-a70a955a326c',
4,
'vehicle-sample'
);
